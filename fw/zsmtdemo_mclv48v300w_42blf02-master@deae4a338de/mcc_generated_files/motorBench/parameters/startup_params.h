/* This is an autogenerated file from a template. Do not edit this file as it will be overwritten.*/
/**
 *
 * startup_params.h
 * 
 * Startup parameters
 *
 * Component: state machine
 */ /*
 *
 * Motor Control Application Framework
 * R7/RC37 (commit 116330, build on 2023 Feb 09)
 *
 * (c) 2017 - 2023 Microchip Technology Inc. and its subsidiaries. You may use
 * this software and any derivatives exclusively with Microchip products.
 *
 * This software and any accompanying information is for suggestion only.
 * It does not modify Microchip's standard warranty for its products.
 * You agree that you are solely responsible for testing the software and
 * determining its suitability.  Microchip has no obligation to modify,
 * test, certify, or support the software.
 *
 * THIS SOFTWARE IS SUPPLIED BY MICROCHIP "AS IS".  NO WARRANTIES,
 * WHETHER EXPRESS, IMPLIED OR STATUTORY, APPLY TO THIS SOFTWARE,
 * INCLUDING ANY IMPLIED WARRANTIES OF NON-INFRINGEMENT, MERCHANTABILITY,
 * AND FITNESS FOR A PARTICULAR PURPOSE, OR ITS INTERACTION WITH
 * MICROCHIP PRODUCTS, COMBINATION WITH ANY OTHER PRODUCTS, OR USE IN ANY
 * APPLICATION.
 *
 * IN NO EVENT WILL MICROCHIP BE LIABLE FOR ANY INDIRECT, SPECIAL,
 * PUNITIVE, INCIDENTAL OR CONSEQUENTIAL LOSS, DAMAGE, COST OR EXPENSE OF
 * ANY KIND WHATSOEVER RELATED TO THE USE OF THIS SOFTWARE, THE
 * motorBench(R) DEVELOPMENT SUITE TOOL, PARAMETERS AND GENERATED CODE,
 * HOWEVER CAUSED, BY END USERS, WHETHER MICROCHIP'S CUSTOMERS OR
 * CUSTOMER'S CUSTOMERS, EVEN IF MICROCHIP HAS BEEN ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGES OR THE DAMAGES ARE FORESEEABLE. TO THE
 * FULLEST EXTENT ALLOWED BY LAW, MICROCHIP'S TOTAL LIABILITY ON ALL
 * CLAIMS IN ANY WAY RELATED TO THIS SOFTWARE WILL NOT EXCEED THE AMOUNT
 * OF FEES, IF ANY, THAT YOU HAVE PAID DIRECTLY TO MICROCHIP FOR THIS
 * SOFTWARE.
 *
 * MICROCHIP PROVIDES THIS SOFTWARE CONDITIONALLY UPON YOUR ACCEPTANCE OF
 * THESE TERMS.
 *
 *
 ******************************************************************************/
#ifndef __STARTUP_PARAMS_H
#define __STARTUP_PARAMS_H

#ifdef  __cplusplus
extern "C" {
#endif

//************** Start-Up Parameters **************

/*
 * Startup operating parameters:
 *
 * Istartup:                     850.000 mA
 * Kspring:                      141.511 mNm/rad
 * omega_crit:                   401.584  rad/s
 *                                 3.835 kRPM
 * omega0:                        80.317  rad/s
 *                               766.970  RPM
 * omega_min:                      3.816  rad/s
 *                                36.440  RPM
 * omega1:                       104.711  rad/s
 *                               999.914  RPM
 * accel_limit_0:                  1.815  rad/s^2
 *                                17.334  RPM/s
 * accel_limit_1:                  9.076  rad/s^2
 *                                86.672  RPM/s
 * accel0:                         1.815  rad/s^2
 *                                17.334  RPM/s
 * accel1:                         9.076  rad/s^2
 *                                86.672  RPM/s
 * t1:                            44.245  s
 * t2:                             2.688  s
 * B_desired:                    704.764 uNm/(rad/s)
 * B_added:                      699.341 uNm/(rad/s)
 * damping_gain_ideal:            16.803 mA/(rad/s)
 * damping_gain_max:             324.676 mA/(rad/s)
 * damping_gain:                  16.803 mA/(rad/s)
 * damping_threshold:             41.884  rad/s
 *                               399.965  RPM
 * damping_Imax:                   1.700  A
 * t_rampup:                      10.863 ms
 * dIdt_rampup:                   78.250  A/s
 * t_align:                        0.000  s
 * t_hold:                         0.000  s
 * t_rampdown_decay:              99.605 ms
 * Irampdown_end:                 42.500 mA
 * rampup_angle:                 -523.599 mrad
 * align_angle_delta:            523.599 mrad
 * theta_error_converge_rate:     17.453  rad/s
 *                               166.667  RPM
 */

/* first startup threshold velocity */
#define STARTUP_ACCEL0_VELOCITY_THRESHOLD       4598      // Q15(  0.14032) = +766.98816 RPM         = +766.96985 RPM         + 0.0024%
/* second startup threshold velocity */
#define STARTUP_ACCEL1_VELOCITY_THRESHOLD       5994      // Q15(  0.18292) = +999.85364 RPM         = +999.91360 RPM         - 0.0060%
/* threshold velocity for damping */
#define STARTUP_DAMPING_THRESHOLD            2398      // Q15(  0.07318) = +400.00818 RPM         = +399.96544 RPM         + 0.0107%
#define Q15_THETADELTA (Q15(THETADELTA/180.0))

/* open loop startup current ramp from initial startup current to startup current */
/* motor current from end of current rampup phase to end of startup */
#define MCAF_STARTUP_CURRENT                  632      // Q15(  0.01929) = +850.33008 mA          = +850.00000 mA          + 0.0388%
/* motor current at beginning of startup */
#define MCAF_STARTUP_CURRENT_INITIAL            0      // Q15(  0.00000) =   +0.00000 A           =   +0.00000 A           + 0.0000%
/* maximum current amplitude used for active damping */
#define STARTUP_DAMPING_IQMAX                1264      // Q15(  0.03857) =   +1.70066 A           =   +1.70000 A           + 0.0388%
/* binary point for active damping gain */
#define STARTUP_DAMPING_SHIFT                   8
/* active damping gain */
#define STARTUP_DAMPING_GAIN                   56      // Q8(  0.21875)  =  +16.84885 mA/(rad/s)  =  +16.80264 mA/(rad/s)  + 0.2750%

//value of theta_error at transition
#define THETADELTA 10           


#define STARTUP_DELTA_T_FACTOR               2388
#define STARTUP_DELTA_T_FACTOR_ACCELERATION          1
/* first startup acceleration rate */
#define STARTUP_ACCELERATION0                 341      // Q15(  0.01041) =   +1.81783 rad/s^2     =   +1.81526 rad/s^2     + 0.1416%
/* second startup acceleration rate */
#define STARTUP_ACCELERATION1                1703      // Q15(  0.05197) =   +9.07848 rad/s^2     =   +9.07629 rad/s^2     + 0.0241%

/* increase in current per control cycle, during current rampup */
#define STARTUP_TORQUE_RAMPUP_RATE              3      // Q15(  0.00009) =   +4.03638 mA          =   +3.91249 mA          + 3.1665%

/* Current rampdown time constant = 0.099605 s */
/* current rampdown decay rate (=1/time constant) */
#define MCAF_RAMPDOWN_DECAY_RATE             8422      // Q24(  0.00050) =  +10.03981 1/s         =  +10.03961 1/s         + 0.0019%
#define MCAF_RAMPDOWN_DECAY_RATE_Q             24
#define MCAF_RAMPDOWN_DECAY_SHIFT (MCAF_RAMPDOWN_DECAY_RATE_Q - 16)

/* current rampdown end threshold */
#define MCAF_RAMPDOWN_END_CURRENT              32      // Q15(  0.00098) =  +43.05469 mA          =  +42.50000 mA          + 1.3051%

/* align angle shift after current rampup */
#define STARTUP_RAMPUP_ANGLE                -5461      // Q15( -0.16666) = -523.56682 mrad        = -523.59878 mrad        - 0.0061%
/* align angle shift after current rampup */
#define STARTUP_ALIGN_ANGLE_DELTA            5461      // Q15(  0.16666) = +523.56682 mrad        = +523.59878 mrad        - 0.0061%
/* hold time between current rampup and acceleration */
#define STARTUP_ALIGN_TIME                      0      // Q0(  0.00000)  =   +0.00000 s           =   +0.00000 s           + 0.0000%
/* hold time between velocity rampup and current rampdown */
#define STARTUP_HOLD_TIME                       0      // Q0(  0.00000)  =   +0.00000 s           =   +0.00000 s           + 0.0000%
// PWM loops necessary for transitioning from open loop to closed loop
#define TRANSITION_STEPS   IRP_PERCALC/4

/* convergence rate (electrical frequency) for forcing angle error towards zero, during transition to closed-loop */
#define STARTUP_THETA_ERROR_CONVERGE_RATE       2330      // Q24(  0.00014) =  +17.45203 rad/s       =  +17.45329 rad/s       - 0.0072%
#define STARTUP_THETA_ERROR_CONVERGE_RATE_Q         24


#ifdef  __cplusplus
}
#endif

#endif // __STARTUP_PARAMS_H
