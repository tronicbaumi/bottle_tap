<?xml version="1.0" encoding="utf-8"?><!--V.0.29--><ControlBlock BlockId="4011" BlockName="ForwardPath_HFI" LibraryName="MCHP_ZSMT" Author="Mark Wendler" Revision="0.1" DateCreated="2016-12-05" DateLastChange="2021-09-03" Prompt="MHCP inverse Clarke Park SVM Merged Transform for ZSMT" Order="0" SampleTimeFactor="1" TexFile="" LibraryType="INTERNAL" PreNameSpace="at.lcm.x2c" DefaultImplementation="FiP16" DirectFeedThrough="true" ParameterId="0" IsStaticId="false" IsConversionOnTarget="false" TaskLabel=""><BlockLicense Type="BSD 3-clause"><CopyrightStatement>Copyright (c) {YEAR}, {ORGANIZATION_NAME}, {ORGANIZATION_WEB}
All rights reserved.</CopyrightStatement><LicenseStatement>This file is licensed according to the BSD 3-clause license as follows:

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:
  * Redistributions of source code must retain the above copyright
    notice, this list of conditions and the following disclaimer.
  * Redistributions in binary form must reproduce the above copyright
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.
  * Neither the name of the "{ORGANIZATION_NAME}" nor
    the names of its contributors may be used to endorse or promote products
    derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
IN NO EVENT SHALL "{ORGANIZATION_NAME}" BE LIABLE FOR ANY
DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</LicenseStatement><Header>This file is part of X2C. http://www.mechatronic-simulation.org/
$LastChangedRevision: 1996 $</Header></BlockLicense><Description>Merged Inverse Park, Inverse Clark and Space Vector Modulation
Park_inv:
alpha = d*cos(theta) - q*sin(theta) 
beta = d*sin(theta) + q*cos(theta)
Clark_inv:
a = beta
b = (-beta + 1.732*alpha)/2
c = (-beta - 1.732*alpha)/2
SVM:
Optimize output for PWM
Description:
Transform from the two-axis rotating d-q frame 
to the two-axis stationary frame α-β.
Transform from the stationary two-axis α-β frame 
to the stationary three-axis, 3-phase reference frame.
Optimize output for PWM</Description><Mask Name="Mask"><InportContainer><MaskInport Name="Ud"><Description>d voltage axis in rotating system</Description><ConnectedOutport Name=""><BlockLink Name=""></BlockLink></ConnectedOutport></MaskInport><MaskInport Name="Uq"><Description>q voltage axis in rotating system</Description><ConnectedOutport Name=""><BlockLink Name=""></BlockLink></ConnectedOutport></MaskInport><MaskInport Name="UdHF"><Description>HF injection to the d axis</Description><ConnectedOutport Name=""><BlockLink Name=""></BlockLink></ConnectedOutport></MaskInport><MaskInport Name="theta"><Description>Rotor position</Description><ConnectedOutport Name=""><BlockLink Name=""></BlockLink></ConnectedOutport></MaskInport></InportContainer><OutportContainer><MaskOutport Name="Va"><Description>Phase A out</Description></MaskOutport><MaskOutport Name="Vb"><Description>Phase B out</Description></MaskOutport><MaskOutport Name="Vc"><Description>Phase C out</Description></MaskOutport><MaskOutport Name="Valpha"><Description>Inverse Park Voltage output</Description></MaskOutport><MaskOutport Name="Vbeta"><Description>Inverse Park Voltage output</Description></MaskOutport></OutportContainer><ParameterContainer><MaskParameter Name="HF_InjectionPolarity" Prompt="HF injection polarity (Adding or subtracting from Ud)"><Description>Adding to Ud --&gt; Non inverting
  
Subtract from Ud --&gt; Inverting</Description><MaskComboBox><Value><String>Non inverting (Add)</String></Value><DefaultValue><String>Non inverting (Add)</String></DefaultValue><Content><Item><String>Non inverting (Add)</String></Item><Item><String>Inverting (Subtract)</String></Item></Content></MaskComboBox></MaskParameter></ParameterContainer><Visualizations><Visualization Name="ScilabXcos" Type="VisualizationScilabXcos"><ScriptDefineSection></ScriptDefineSection><ScriptPlotSection></ScriptPlotSection><ScriptStyle></ScriptStyle><BlockIconDefaultSize>[8 8]</BlockIconDefaultSize></Visualization></Visualizations></Mask><ImplementationConfig><ExistingImplementationContainer><Implementation Id="0" Name="FiP16" FriendlyName="16 Bit Fixed Point" Author="Mark Wendler" Revision="0.1" DateCreated="2016-12-05" DateLastChange="2021-09-03" CFileName="ForwardPath_HFI_FiP16.c" HFileName="ForwardPath_HFI_FiP16.h" UpdateEnabled="true" ChecksumCFile="" ChecksumHFile="" AllowEmptyLoadFnc="false"><Description>16 Bit Fixed Point Implementation</Description><InportContainer><ImplementationInport Name="Ud" DataType="INT16"></ImplementationInport><ImplementationInport Name="Uq" DataType="INT16"></ImplementationInport><ImplementationInport Name="UdHF" DataType="INT16"></ImplementationInport><ImplementationInport Name="theta" DataType="INT16"></ImplementationInport></InportContainer><OutportContainer><ImplementationOutport Name="Va" DataType="INT16"></ImplementationOutport><ImplementationOutport Name="Vb" DataType="INT16"></ImplementationOutport><ImplementationOutport Name="Vc" DataType="INT16"></ImplementationOutport><ImplementationOutport Name="Valpha" DataType="INT16"></ImplementationOutport><ImplementationOutport Name="Vbeta" DataType="INT16"></ImplementationOutport></OutportContainer><ParameterContainer><ImplementationParameter Name="HF_InjectionPolarity" DataType="BOOL" isLoadable="true" isSaveable="true" isArray="false" isFlashArray="false" arraySize="0"><Description>HF injection polarity (Adding or subtracting from Ud)
Adding to Ud --&gt; Non inverting
Subtract from Ud --&gt; Inverting</Description><Value><Numeric>0.0</Numeric></Value></ImplementationParameter></ParameterContainer><Conversion Type="JavaScript" Language="JavaScript"></Conversion><FunctionLink Status="false" BlockName="" ImplementationName=""></FunctionLink></Implementation><Implementation Id="1" Name="FiP32" FriendlyName="32 Bit Fixed Point" Author="Mark Wendler" Revision="0.1" DateCreated="2016-12-05" DateLastChange="2021-09-03" CFileName="ForwardPath_HFI_FiP32.c" HFileName="ForwardPath_HFI_FiP32.h" UpdateEnabled="true" ChecksumCFile="" ChecksumHFile="" AllowEmptyLoadFnc="false"><Description>32 Bit Fixed Point Implementation</Description><InportContainer><ImplementationInport Name="Ud" DataType="INT32"></ImplementationInport><ImplementationInport Name="Uq" DataType="INT32"></ImplementationInport><ImplementationInport Name="UdHF" DataType="INT32"></ImplementationInport><ImplementationInport Name="theta" DataType="INT32"></ImplementationInport></InportContainer><OutportContainer><ImplementationOutport Name="Va" DataType="INT32"></ImplementationOutport><ImplementationOutport Name="Vb" DataType="INT32"></ImplementationOutport><ImplementationOutport Name="Vc" DataType="INT32"></ImplementationOutport><ImplementationOutport Name="Valpha" DataType="INT32"></ImplementationOutport><ImplementationOutport Name="Vbeta" DataType="INT32"></ImplementationOutport></OutportContainer><ParameterContainer><ImplementationParameter Name="HF_InjectionPolarity" DataType="BOOL" isLoadable="true" isSaveable="true" isArray="false" isFlashArray="false" arraySize="0"><Description>HF injection polarity (Adding or subtracting from Ud)
Adding to Ud --&gt; Non inverting
Subtract from Ud --&gt; Inverting</Description><Value><Numeric>0.0</Numeric></Value></ImplementationParameter></ParameterContainer><Conversion Type="JavaScript" Language="JavaScript"></Conversion><FunctionLink Status="false" BlockName="" ImplementationName=""></FunctionLink></Implementation><Implementation Id="2" Name="Float32" FriendlyName="32 Bit Floating Point" Author="Mark Wendler" Revision="0.1" DateCreated="2016-12-05" DateLastChange="2021-09-03" CFileName="ForwardPath_HFI_Float32.c" HFileName="ForwardPath_HFI_Float32.h" UpdateEnabled="true" ChecksumCFile="" ChecksumHFile="" AllowEmptyLoadFnc="false"><Description>32 Bit Floating Point Implementation</Description><InportContainer><ImplementationInport Name="Ud" DataType="FLOAT32"></ImplementationInport><ImplementationInport Name="Uq" DataType="FLOAT32"></ImplementationInport><ImplementationInport Name="UdHF" DataType="FLOAT32"></ImplementationInport><ImplementationInport Name="theta" DataType="FLOAT32"></ImplementationInport></InportContainer><OutportContainer><ImplementationOutport Name="Va" DataType="FLOAT32"></ImplementationOutport><ImplementationOutport Name="Vb" DataType="FLOAT32"></ImplementationOutport><ImplementationOutport Name="Vc" DataType="FLOAT32"></ImplementationOutport><ImplementationOutport Name="Valpha" DataType="FLOAT32"></ImplementationOutport><ImplementationOutport Name="Vbeta" DataType="FLOAT32"></ImplementationOutport></OutportContainer><ParameterContainer><ImplementationParameter Name="HF_InjectionPolarity" DataType="BOOL" isLoadable="true" isSaveable="true" isArray="false" isFlashArray="false" arraySize="0"><Description>HF injection polarity (Adding or subtracting from Ud)
Adding to Ud --&gt; Non inverting
Subtract from Ud --&gt; Inverting</Description><Value><Numeric>0.0</Numeric></Value></ImplementationParameter></ParameterContainer><Conversion Type="JavaScript" Language="JavaScript"></Conversion><FunctionLink Status="false" BlockName="" ImplementationName=""></FunctionLink></Implementation></ExistingImplementationContainer><UsedImplementation></UsedImplementation></ImplementationConfig></ControlBlock>