// This file was generated by createLibraryStarter.sce on 10-08-2023 12:11

mprintf("+++ Loading X2C library MCHP_ZSMT\n");
scilab_dir = getLibraryScilabPath(fullfile(get_absolute_file_path("starter.sce"), ".."));

// load and add help chapter
if or(getscilabmode() == ["NW";"STD"]) then
    path_addchapter = fullfile(scilab_dir, "jar");
    if isdir(path_addchapter) then
        add_help_chapter("X2C MCHP_ZSMT Library", path_addchapter, %F);
    end
end

// load interface functions
exec("x2c_TrackingLoop.sci", -1);
exec("x2c_SquareInj_Slow.sci", -1);
exec("x2c_SquareInjectio.sci", -1);
exec("x2c_InitPosDetec.sci", -1);
exec("x2c_HFInjectionS.sci", -1);
exec("x2c_ForwardPath_.sci", -1);
exec("x2c_EstimatorSwi.sci", -1);

palette_file = fullfile(scilab_dir, "MCHP_ZSMT.xpal");
// load/create palette for library
if isfile(palette_file) then
    // palette already exists -> load saved palette
    xcosPalAdd(palette_file, "X2C");
else
    
    // load blocks and build palette
    pal = xcosPal("MCHP_ZSMT");
    allIconsAvailable = %t;
    
    icon_dir = fullfile(scilab_dir, "Icons");
    
    // EstimatorSwitch
    mprintf("Loading block EstimatorSwitch...");
    o = x2c_EstimatorSwi("define");
    pal_icon = fullfile(icon_dir, "EstimatorSwitch.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // ForwardPath_HFI
    mprintf("Loading block ForwardPath_HFI...");
    o = x2c_ForwardPath_("define");
    pal_icon = fullfile(icon_dir, "ForwardPath_HFI.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // HFInjectionSquare
    mprintf("Loading block HFInjectionSquare...");
    o = x2c_HFInjectionS("define");
    pal_icon = fullfile(icon_dir, "HFInjectionSquare.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // InitPosDetect
    mprintf("Loading block InitPosDetect...");
    o = x2c_InitPosDetec("define");
    pal_icon = fullfile(icon_dir, "InitPosDetect.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // SquareInj_Slow_Modell
    mprintf("Loading block SquareInj_Slow_Modell...");
    o = x2c_SquareInj_Slow("define");
    pal_icon = fullfile(icon_dir, "SquareInj_Slow_Modell.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // SquareInjection_Fast
    mprintf("Loading block SquareInjection_Fast...");
    o = x2c_SquareInjectio("define");
    pal_icon = fullfile(icon_dir, "SquareInjection_Fast.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // TrackingLoop
    mprintf("Loading block TrackingLoop...");
    o = x2c_TrackingLoop("define");
    pal_icon = fullfile(icon_dir, "TrackingLoop.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    

    // load palette
    xcosPalAdd(pal, "X2C");
    
    // save palette if all icons are available
    if allIconsAvailable then
        // create directory for XPAL file if it does not exist
        if ~isdir(scilab_dir) then
            mkdir(scilab_dir);
        end
        xcosPalExport(pal, palette_file);
    end
    
end

// cleanup
clear("pal", "pal_icon", "style", "allIconsAvailable", "icon_dir", "scilab_dir");
clear("path_addchapter", "palette_file");

mprintf("---\n");
