// This file is released under the 3-clause BSD license. See COPYING-BSD.
// Generated by builder.sce : Please, do not edit this file
// ----------------------------------------------------------------------------
//
if win64() then
  warning(_("This module requires a Windows x86 platform."));
  return
end
//
MCHP_ZSMT_x86_path = get_absolute_file_path('loader_x86.sce');
//
// ulink previous function with same name
[bOK, ilib] = c_link('x2c_EstimatorSwi_FiP16_C');
if bOK then
  ulink(ilib);
end
//
[bOK, ilib] = c_link('x2c_EstimatorSwi_FiP32_C');
if bOK then
  ulink(ilib);
end
//
[bOK, ilib] = c_link('x2c_EstimatorSwi_Float32_C');
if bOK then
  ulink(ilib);
end
//
[bOK, ilib] = c_link('x2c_EstimatorSwi_Float64_C');
if bOK then
  ulink(ilib);
end
//
[bOK, ilib] = c_link('x2c_HFInjectionS_FiP16_C');
if bOK then
  ulink(ilib);
end
//
[bOK, ilib] = c_link('x2c_HFInjectionS_FiP32_C');
if bOK then
  ulink(ilib);
end
//
[bOK, ilib] = c_link('x2c_HFInjectionS_Float32_C');
if bOK then
  ulink(ilib);
end
//
[bOK, ilib] = c_link('x2c_HFInjectionS_Float64_C');
if bOK then
  ulink(ilib);
end
//
[bOK, ilib] = c_link('x2c_InitPosDetec_FiP16_C');
if bOK then
  ulink(ilib);
end
//
[bOK, ilib] = c_link('x2c_InitPosDetec_FiP32_C');
if bOK then
  ulink(ilib);
end
//
[bOK, ilib] = c_link('x2c_InitPosDetec_Float32_C');
if bOK then
  ulink(ilib);
end
//
[bOK, ilib] = c_link('x2c_InitPosDetec_Float64_C');
if bOK then
  ulink(ilib);
end
//
link(MCHP_ZSMT_x86_path + 'libMCHP_ZSMT_x86' + getdynlibext(), ['x2c_EstimatorSwi_FiP16_C','x2c_EstimatorSwi_FiP32_C','x2c_EstimatorSwi_Float32_C','x2c_EstimatorSwi_Float64_C','x2c_HFInjectionS_FiP16_C','x2c_HFInjectionS_FiP32_C','x2c_HFInjectionS_Float32_C','x2c_HFInjectionS_Float64_C','x2c_InitPosDetec_FiP16_C','x2c_InitPosDetec_FiP32_C','x2c_InitPosDetec_Float32_C','x2c_InitPosDetec_Float64_C'],'c');
// remove temp. variables on stack
clear MCHP_ZSMT_x86_path;
clear bOK;
clear ilib;
// ----------------------------------------------------------------------------
