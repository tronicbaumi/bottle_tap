/* This is an autogenerated file from a template. Do not edit this file as it will be overwritten.*/
/**
 *
 * startup_params.h
 * 
 * Startup parameters
 *
 * Component: state machine
 */ /*
 *
 * Motor Control Application Framework
 * R7/RC37 (commit 116330, build on 2023 Feb 09)
 *
 * (c) 2017 - 2023 Microchip Technology Inc. and its subsidiaries. You may use
 * this software and any derivatives exclusively with Microchip products.
 *
 * This software and any accompanying information is for suggestion only.
 * It does not modify Microchip's standard warranty for its products.
 * You agree that you are solely responsible for testing the software and
 * determining its suitability.  Microchip has no obligation to modify,
 * test, certify, or support the software.
 *
 * THIS SOFTWARE IS SUPPLIED BY MICROCHIP "AS IS".  NO WARRANTIES,
 * WHETHER EXPRESS, IMPLIED OR STATUTORY, APPLY TO THIS SOFTWARE,
 * INCLUDING ANY IMPLIED WARRANTIES OF NON-INFRINGEMENT, MERCHANTABILITY,
 * AND FITNESS FOR A PARTICULAR PURPOSE, OR ITS INTERACTION WITH
 * MICROCHIP PRODUCTS, COMBINATION WITH ANY OTHER PRODUCTS, OR USE IN ANY
 * APPLICATION.
 *
 * IN NO EVENT WILL MICROCHIP BE LIABLE FOR ANY INDIRECT, SPECIAL,
 * PUNITIVE, INCIDENTAL OR CONSEQUENTIAL LOSS, DAMAGE, COST OR EXPENSE OF
 * ANY KIND WHATSOEVER RELATED TO THE USE OF THIS SOFTWARE, THE
 * motorBench(R) DEVELOPMENT SUITE TOOL, PARAMETERS AND GENERATED CODE,
 * HOWEVER CAUSED, BY END USERS, WHETHER MICROCHIP'S CUSTOMERS OR
 * CUSTOMER'S CUSTOMERS, EVEN IF MICROCHIP HAS BEEN ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGES OR THE DAMAGES ARE FORESEEABLE. TO THE
 * FULLEST EXTENT ALLOWED BY LAW, MICROCHIP'S TOTAL LIABILITY ON ALL
 * CLAIMS IN ANY WAY RELATED TO THIS SOFTWARE WILL NOT EXCEED THE AMOUNT
 * OF FEES, IF ANY, THAT YOU HAVE PAID DIRECTLY TO MICROCHIP FOR THIS
 * SOFTWARE.
 *
 * MICROCHIP PROVIDES THIS SOFTWARE CONDITIONALLY UPON YOUR ACCEPTANCE OF
 * THESE TERMS.
 *
 *
 ******************************************************************************/
#ifndef __STARTUP_PARAMS_H
#define __STARTUP_PARAMS_H

#ifdef  __cplusplus
extern "C" {
#endif

//************** Start-Up Parameters **************

/*
 * Startup operating parameters:
 *
 * Istartup:                     170.000 mA
 * Kspring:                       28.302 mNm/rad
 * omega_crit:                   179.594  rad/s
 *                                 1.715 kRPM
 * omega0:                        10.471  rad/s
 *                                99.991  RPM
 * omega_min:                      9.540  rad/s
 *                                91.100  RPM
 * omega1:                        10.471  rad/s
 *                                99.991  RPM
 * accel_limit_0:                 54.429  rad/s^2
 *                               519.755  RPM/s
 * accel_limit_1:                272.143  rad/s^2
 *                                 2.599 kRPM/s
 * accel0:                        54.429  rad/s^2
 *                               519.755  RPM/s
 * accel1:                        96.395  rad/s^2
 *                               920.506  RPM/s
 * t1:                           192.382 ms
 * t2:                             0.000  s
 * B_desired:                    315.180 uNm/(rad/s)
 * B_added:                      309.757 uNm/(rad/s)
 * damping_gain_ideal:             7.442 mA/(rad/s)
 * damping_gain_max:             324.676 mA/(rad/s)
 * damping_gain:                   7.442 mA/(rad/s)
 * damping_threshold:            104.711 mrad/s
 *                               999.914 mRPM
 * damping_Imax:                 340.000 mA
 * t_rampup:                     869.012 ms
 * dIdt_rampup:                  195.624 mA/s
 * t_align:                        0.000  s
 * t_hold:                         0.000  s
 * t_rampdown_decay:             222.725 ms
 * Irampdown_end:                  8.500 mA
 * rampup_angle:                 -523.599 mrad
 * align_angle_delta:            523.599 mrad
 * theta_error_converge_rate:     17.453  rad/s
 *                               166.667  RPM
 */

/* first startup threshold velocity */
#define STARTUP_ACCEL0_VELOCITY_THRESHOLD        599      // Q15(  0.01828) =  +99.91864 RPM         =  +99.99136 RPM         - 0.0727%
/* second startup threshold velocity */
#define STARTUP_ACCEL1_VELOCITY_THRESHOLD        599      // Q15(  0.01828) =  +99.91864 RPM         =  +99.99136 RPM         - 0.0727%
/* threshold velocity for damping */
#define STARTUP_DAMPING_THRESHOLD               6      // Q15(  0.00018) =   +1.00085 RPM         = +999.91360 mRPM        + 0.0941%
#define Q15_THETADELTA (Q15(THETADELTA/180.0))

/* open loop startup current ramp from initial startup current to startup current */
/* motor current from end of current rampup phase to end of startup */
#define MCAF_STARTUP_CURRENT                  126      // Q15(  0.00385) = +169.52783 mA          = +170.00000 mA          - 0.2777%
/* motor current at beginning of startup */
#define MCAF_STARTUP_CURRENT_INITIAL            0      // Q15(  0.00000) =   +0.00000 A           =   +0.00000 A           + 0.0000%
/* maximum current amplitude used for active damping */
#define STARTUP_DAMPING_IQMAX                 253      // Q15(  0.00772) = +340.40112 mA          = +340.00000 mA          + 0.1180%
/* binary point for active damping gain */
#define STARTUP_DAMPING_SHIFT                   8
/* active damping gain */
#define STARTUP_DAMPING_GAIN                   25      // Q8(  0.09766)  =   +7.52181 mA/(rad/s)  =   +7.44235 mA/(rad/s)  + 1.0677%

//value of theta_error at transition
#define THETADELTA 10           


#define STARTUP_DELTA_T_FACTOR               2388
#define STARTUP_DELTA_T_FACTOR_ACCELERATION          1
/* first startup acceleration rate */
#define STARTUP_ACCELERATION0               10210      // Q15(  0.31158) =  +54.42822 rad/s^2     =  +54.42866 rad/s^2     - 0.0008%
/* second startup acceleration rate */
#define STARTUP_ACCELERATION1               18082      // Q15(  0.55182) =  +96.39285 rad/s^2     =  +96.39518 rad/s^2     - 0.0024%

/* increase in current per control cycle, during current rampup */
#define STARTUP_TORQUE_RAMPUP_RATE              0      // Q15(  0.00000) =   +0.00000 A           =   +9.78122 uA          -100.0000%

/* Current rampdown time constant = 0.222725 s */
/* current rampdown decay rate (=1/time constant) */
#define MCAF_RAMPDOWN_DECAY_RATE             3766      // Q24(  0.00022) =   +4.48942 1/s         =   +4.48985 1/s         - 0.0096%
#define MCAF_RAMPDOWN_DECAY_RATE_Q             24
#define MCAF_RAMPDOWN_DECAY_SHIFT (MCAF_RAMPDOWN_DECAY_RATE_Q - 16)

/* current rampdown end threshold */
#define MCAF_RAMPDOWN_END_CURRENT               6      // Q15(  0.00018) =   +8.07275 mA          =   +8.50000 mA          - 5.0264%

/* align angle shift after current rampup */
#define STARTUP_RAMPUP_ANGLE                -5461      // Q15( -0.16666) = -523.56682 mrad        = -523.59878 mrad        - 0.0061%
/* align angle shift after current rampup */
#define STARTUP_ALIGN_ANGLE_DELTA            5461      // Q15(  0.16666) = +523.56682 mrad        = +523.59878 mrad        - 0.0061%
/* hold time between current rampup and acceleration */
#define STARTUP_ALIGN_TIME                      0      // Q0(  0.00000)  =   +0.00000 s           =   +0.00000 s           + 0.0000%
/* hold time between velocity rampup and current rampdown */
#define STARTUP_HOLD_TIME                       0      // Q0(  0.00000)  =   +0.00000 s           =   +0.00000 s           + 0.0000%
// PWM loops necessary for transitioning from open loop to closed loop
#define TRANSITION_STEPS   IRP_PERCALC/4

/* convergence rate (electrical frequency) for forcing angle error towards zero, during transition to closed-loop */
#define STARTUP_THETA_ERROR_CONVERGE_RATE       2330      // Q24(  0.00014) =  +17.45203 rad/s       =  +17.45329 rad/s       - 0.0072%
#define STARTUP_THETA_ERROR_CONVERGE_RATE_Q         24


#ifdef  __cplusplus
}
#endif

#endif // __STARTUP_PARAMS_H
